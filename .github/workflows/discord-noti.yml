name: Discord Notification

on:
  pull_request:
    types: [opened, ready_for_review, review_requested]
  pull_request_review:
    types: [submitted]

jobs:
  PR:
    runs-on: ubuntu-latest
    env:
      READY_FOR_REVIEW: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install jq
        run: sudo apt-get install jq

      - name: Notify on PR opened
        if: github.event.action == 'opened'
        run: |
          curl -X POST \
          -H 'Content-type: application/json' \
          -d "{\"content\":\"Pull Request가 열렸습니다! PR(#${{ github.event.pull_request.number }}): [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Set environment variable for ready for review
        if: github.event.action == 'ready_for_review'
        run: |
          echo "READY_FOR_REVIEW=true" >> $GITHUB_ENV
          echo "REQUESTED_REVIEWERS_COUNT=$(echo '${{ toJson(github.event.pull_request.requested_reviewers) }}' | jq 'length')" >> $GITHUB_ENV

      - name: Notify on PR ready for review with review requested
        if: github.event.action == 'ready_for_review' && env.REQUESTED_REVIEWERS_COUNT > 0
        run: |
          ASSIGNEE=$(jq -r --arg assignee "${{ github.event.pull_request.assignee.login }}" '.[$assignee]' user-mapping.json)
          REQUESTED_REVIEWERS=$(echo '${{ toJson(github.event.pull_request.requested_reviewers) }}' | jq -r --argfile mapping user-mapping.json 'map(.login as $login | "<@"+($mapping[$login])+">") | join(", ")')
          curl -X POST \
          -H 'Content-type: application/json' \
          -d "{\"content\":\"PR(#${{ github.event.pull_request.number }}): [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }}) \n담당자 <@$ASSIGNEE>님이 $REQUESTED_REVIEWERS님(들)에게 리뷰를 요청했습니다!\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Notify on PR review requested
        if: github.event.action == 'review_requested' && env.READY_FOR_REVIEW != 'false'
        run: |
          ASSIGNEE=$(jq -r --arg assignee "${{ github.event.pull_request.assignee.login }}" '.[$assignee]' user-mapping.json)
          REQUESTED_REVIEWERS=$(echo '${{ toJson(github.event.pull_request.requested_reviewers) }}' | jq -r --argfile mapping user-mapping.json 'map(.login as $login | "<@"+($mapping[$login])+">") | join(", ")')
          curl -X POST \
          -H 'Content-type: application/json' \
          -d "{\"content\":\"PR(#${{ github.event.pull_request.number }}): [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }}) \n담당자 <@$ASSIGNEE>님이 $REQUESTED_REVIEWERS님(들)에게 리뷰를 요청했습니다!\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}

  Review:
    runs-on: ubuntu-latest
    steps:
      - name: Install jq
        run: sudo apt-get install jq

      - name: Notify on PR review submitted
        if: github.event.action == 'submitted'
        run: |
          REVIEWER=$(jq -r --arg reviewer "${{ github.event.review.user.login }}" '.[$reviewer]' user-mapping.json)
          ASSIGNEE=$(jq -r --arg assignee "${{ github.event.pull_request.assignee.login }}" '.[$assignee]' user-mapping.json)
          curl -X POST \
          -H 'Content-type: application/json' \
          -d "{\"content\":\"<@$REVIEWER>님이 리뷰를 완료했습니다! 담당자 <@$ASSIGNEE>님은 PR(#${{ github.event.pull_request.number }}): [${{ github.event.pull_request.title }}](${{ github.event.pull_request.html_url }})\"}" \
          ${{ secrets.DISCORD_WEBHOOK_URL }}
